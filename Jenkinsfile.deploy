pipeline {
  agent any

  parameters {
    choice(name: 'DEPLOY_COLOR', choices: ['blue', 'green'], description: 'Choose which version to deploy')
  }

  environment {
    CLUSTER_NAME = 'vincloudops-ecommerce-eks'
    AWS_REGION   = 'us-east-1'
    KUBECONFIG   = "${env.WORKSPACE}/kubeconfig"
  }

  stages {
    stage('Configure kubeconfig') {
      steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-ecr']]) {
          sh '''
            aws eks update-kubeconfig \
              --name $CLUSTER_NAME \
              --region $AWS_REGION \
              --kubeconfig $KUBECONFIG
          '''
        }
      }
    }

    stage('Deploy to EKS') {
      steps {
        // ‚¨áÔ∏è Wrap kubectl also with AWS credentials
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-ecr']]) {
          withEnv(["KUBECONFIG=${env.KUBECONFIG}"]) {
            sh '''
              echo "üì¶ Deploying using: k8s/deployment-${DEPLOY_COLOR}.yaml"
              kubectl apply -f k8s/deployment-${DEPLOY_COLOR}.yaml
            '''
          }
        }
      }
    }
  }

  post {
    success {
      echo "‚úÖ Successfully deployed to ${params.DEPLOY_COLOR} environment!"
    }
    failure {
      echo "‚ùå Deployment failed!"
    }
  }
}
pipeline {
  agent any

  parameters {
    choice(name: 'DEPLOY_COLOR', choices: ['blue', 'green'], description: 'Choose which version to deploy')
  }

  environment {
    CLUSTER_NAME = 'vincloudops-ecommerce-eks'
    AWS_REGION   = 'us-east-1'
    KUBECONFIG   = "${env.WORKSPACE}/kubeconfig"
  }

  stages {
    stage('Configure kubeconfig') {
      steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-ecr']]) {
          sh '''
            aws eks update-kubeconfig \
              --name $CLUSTER_NAME \
              --region $AWS_REGION \
              --kubeconfig $KUBECONFIG
          '''
        }
      }
    }

    stage('Deploy to EKS') {
      steps {
        // ‚¨áÔ∏è Wrap kubectl also with AWS credentials
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-ecr']]) {
          withEnv(["KUBECONFIG=${env.KUBECONFIG}"]) {
            sh '''
              echo "üì¶ Deploying using: k8s/deployment-${DEPLOY_COLOR}.yaml"
              kubectl apply -f k8s/deployment-${DEPLOY_COLOR}.yaml
            '''
          }
        }
      }
    }
  }

  post {
    success {
      echo "‚úÖ Successfully deployed to ${params.DEPLOY_COLOR} environment!"
    }
    failure {
      echo "‚ùå Deployment failed!"
    }
  }
}
